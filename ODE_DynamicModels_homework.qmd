---
title: "ODE_DynamicModels_homework"
author: "Kyle Burt, Michelle Moreno"
format: 
  html:
    embed-resources: true
editor: visual
---

# Libraries

```{r}
library(tidyverse)
library(deSolve)
library(sensitivity)
library(here)
```

# Source function

```{r}
source(here("R/forest_growth.R"))

dforestgrowth
```

# Parameter setup

### Initial forest size

```{r}
FS_initial <- 10
```

### Set sensitivity parameters (sample 1)

```{r}
np <- 2000
K <- rnorm(mean = 250, sd = 25, n = np)
r <- rnorm(mean = 0.01, sd = 0.001, n = np)
g <- rnorm(mean = 2, sd = 0.2, n = np)
threshold <- rnorm(mean = 50, sd = 5, n = np)
X1 <- cbind.data.frame(r = r, K = K, g = g, threshold = threshold)
```

### Set sensitivity parameters (sample 2)

```{r}
np <- 2000
K <- rnorm(mean = 250, sd = 25, n = np)
r <- rnorm(mean = 0.01, sd = 0.001, n = np)
g <- rnorm(mean = 2, sd = 0.2, n = np)
threshold <- rnorm(mean = 50, sd = 5, n = np)
X2 <- cbind.data.frame(r = r, K = K, g = g, threshold = threshold)
```

### Fix negative values

```{r}
X1 <- X1 |> 
  map_df(pmax, 0.0)

X2 <- X2 |> 
  map_df(pmax, 0.0)
```

### Create sobol object and get sets of parameters

```{r}
sens_P <- sobolSalt(model = NULL, X1, X2, nboot = 300)
```

### Examine parameter sets

```{r}
head(sens_P$X)
```

### Add column names

```{r}
colnames(sens_P$X) <- c("r", "K", "g", "threshold")

head(sens_P$X)
```

### Extract first parameter set

```{r}
sens_P$X[1, ]
```

### Results for 300 years

```{r}
simtimes <- seq(from = 1, to = 300)
```

### Define parameters

```{r}
parms <- list(r = sens_P$X[1, "r"], K = sens_P$X[1, "K"], 
              g = sens_P$X[1, "g"], 
              threshold = sens_P$X[1, "threshold"])
```

### Result

```{r}
result <- ode(y = FS_initial, times = simtimes, 
              func = dforestgrowth, parms = parms)

head(result)

colnames(result) <- c("time", "forest_size")
```

### Turn 'result' into a data frame

```{r}
result <- as.data.frame(result)
```

# Graph results without uncertainty

```{r}
ggplot(result, aes(time, forest_size)) +
  geom_point() + 
  theme_bw()
```

# Run sobol global sensitivity analysis

### Extract maximum forest size

```{r}
max_size <- max(result$forest_size)
```

### Set canopy closure threshold

```{r}
thresh <- 300
```

### Years required to get to a canopy closure threshold

```{r}
idx <- which(result$forest_size > thresh)[1]

idx <- ifelse(is.na(idx), length(result$forest_size), idx)
```

### Turn index into a year

```{r}
threshyear <- result$time[idx]

print(threshyear)
```
